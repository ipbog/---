# utils_crate/Cargo.toml
[package]
name = "utils_crate"
version = { workspace = true }
edition = { workspace = true }
authors = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
# publish = { workspace = true } # publish for utils_crate was true in user's file, but root is false.
                                 # Setting to false unless explicitly intended to publish this utility crate alone.
publish = false
description = "Общие утилиты, типы ошибок и разделяемые структуры данных для проекта AI Code Assistant."

[dependencies]
# --- Зависимости, версии которых наследуются из workspace ---
# Они становятся опциональными ЗДЕСЬ, если utils_crate не всегда их требует.
# `optional = true` означает, что зависимость будет включена только если активирована соответствующая фича.
thiserror = { workspace = true }
tracing = { workspace = true }
serde = { workspace = true, optional = true } # Активируется фичами `config_toml` или `task_definitions_serde`
serde_json = { workspace = true, optional = true } # Активируется фичей `task_definitions_serde`
uuid = { workspace = true, optional = true } # Активируется фичей `uuid_feature`
tokio = { workspace = true, optional = true } # Активируется фичей `tokio_sender_feature`
lsp-types = { workspace = true, optional = true } # Активируется фичей `lsp_type_integration`
either = { workspace = true, optional = true } # Активируется фичей `task_definitions_serde`
indexmap = { workspace = true, optional = true } # Активируется фичей `task_definitions_serde`
tracing-appender = { workspace = true, optional = true } # Активируется фичей `logger_utils_feature`
toml_edit = { workspace = true, optional = true } # Активируется фичей `config_toml`
path-absolutize = { workspace = true, optional = true } # Активируется фичей `path_utils_feature`
config = { workspace = true, optional = true } # Added config as optional, activated by config_toml feature

# Специфичная версия, если не управляется из workspace, или если нужна только здесь.
llguidance = { version = "0.7.24", optional = true } # Активируется фичей `llguidance_support`

[features]
# Набор фич, включаемых по умолчанию для `utils_crate`.
default = [
    "path_utils_feature",
    "logger_utils_feature",
    "config_toml",
    "task_definitions_serde", # Эта фича потянет за собой lsp_type_integration
    "uuid_feature",
    "tokio_sender_feature",
    "lsp_type_integration", # Явно включена в default, что хорошо для других потребителей utils_crate
]

# Фича для утилит работы с путями.
path_utils_feature = ["dep:path-absolutize"]
# Фича для утилит инициализации логирования.
logger_utils_feature = ["dep:tracing-appender"]

# Фича для загрузки AppConfig из TOML и (де)сериализации.
# Also activates dep:config now.
config_toml = ["dep:serde", "dep:toml_edit", "dep:config"]

# Фича для интеграции с типами из lsp-types, включая их serde поддержку.
lsp_type_integration = ["dep:lsp-types", "lsp-types/serde"] # Assuming lsp-types/serde is a valid feature combination

# Общая фича для (де)сериализации всех типов, связанных с задачами инференса.
task_definitions_serde = [
    "dep:serde",
    "dep:serde_json",
    "dep:either",
    "dep:indexmap",
    "uuid_feature",       # Гарантирует, что uuid_feature включена.
    "uuid/serde",     # Активирует фичу "serde" для крейта uuid.
    "lsp_type_integration", # Гарантирует, что lsp_type_integration (включая serde для lsp-types) включена.
]

# Фича для использования UUID.
uuid_feature = ["dep:uuid"]
# Фича для использования tokio::sync::mpsc::Sender.
tokio_sender_feature = ["dep:tokio"] # `tokio` уже включает `sync` фичу из-за `features = ["full"]` в workspace.

# Фича для поддержки llguidance.
llguidance_support = ["dep:llguidance", "task_definitions_serde"]
```
