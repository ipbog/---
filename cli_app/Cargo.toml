# cli_app/Cargo.toml
[package]
name = "cli_app"
version = { workspace = true }
edition = { workspace = true }
authors = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
publish = false
description = "CLI-интерфейс для взаимодействия с AI Агентами и управления обучением."
rust-version = { workspace = true }

[dependencies]
utils_crate = { path = "../utils_crate", default-features = false, features = [
    "path_utils_feature", "logger_utils_feature", "config_toml",
    "agent_task_definitions_serde", "uuid_feature", "tokio_sender_feature"
] }
inference_engine = { path = "../inference_engine", default-features = false, optional = true }
training_engine = { path = "../training_engine", default-features = false, optional = true }
clap = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tokio = { workspace = true }
anyhow = { workspace = true }
burn = { workspace = true }

burn-ndarray = { version = "0.17.0", default-features = false, features = ["std"], optional = true }
burn-tch = { version = "0.17.0", default-features = false, features = ["std"], optional = true }
burn-wgpu = { version = "0.17.0", default-features = false, features = ["std"], optional = true }
burn-autodiff = { version = "0.17.0", optional = true }


[[bin]]
name = "aicodelabs-cli"
path = "src/main.rs"

[features]
default = ["enable_inference", "ndarray_backend_cli"]

enable_inference = ["dep:inference_engine"]
enable_training = ["dep:training_engine", "dep:burn-autodiff"] # burn-autodiff is enabled here if training is enabled

ndarray_backend_cli = [
    "dep:burn-ndarray",
    "inference_engine?/ndarray_backend",
    "training_engine?/ndarray_backend_train",
    "inference_engine?/rayon_support", 
    "training_engine?/rayon_support" 
]
tch_backend_cli = [
    "dep:burn-tch",
    "inference_engine?/tch_backend",
    "training_engine?/tch_backend_train",
    "inference_engine?/rayon_support", 
    "training_engine?/rayon_support" 
]
wgpu_backend_cli = [
    "dep:burn-wgpu",
    "inference_engine?/wgpu_backend",
    "training_engine?/wgpu_backend_train",
    "inference_engine?/rayon_support", 
    "training_engine?/rayon_support" 
]
```
